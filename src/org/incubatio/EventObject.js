/**
 * Generated by Apache Royale Compiler from org/incubatio/EventObject.as
 * org.incubatio.EventObject
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.incubatio.EventObject');



/**
 * @constructor
 */
org.incubatio.EventObject = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.incubatio.EventObject', org.incubatio.EventObject);


/**
 * @protected
 * @type {Array}
 */
org.incubatio.EventObject.prototype._events;


/**
 * @export
 * @param {string} name
 * @param {Function} cb
 */
org.incubatio.EventObject.prototype.on = function(name, cb) {
  if (!this._events)
    this._events = [];
  if (!this._events[name])
    this._events[name] = [];
  this._events[name].push(cb);
};


/**
 * @export
 * @param {string} name
 */
org.incubatio.EventObject.prototype.off = function(name) {
  if (this._events)
    this._events.splice(this._events.indexOf(name), 1);
};


/**
 * @export
 * @param {string} name
 * @param {Object=} argv
 */
org.incubatio.EventObject.prototype.trigger = function(name, argv) {
  argv = typeof argv !== 'undefined' ? argv : null;
  if (argv == null)
    argv = new Object();
  if (this._events && this._events[name]) {
    var foreachiter0_target = this._events[name];
    for (var foreachiter0 in foreachiter0_target) 
    {
    var cb = foreachiter0_target[foreachiter0];
    {
      cb({name:name, ctx:this, params:argv});
    }}
    
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.incubatio.EventObject.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'EventObject', qName: 'org.incubatio.EventObject', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.incubatio.EventObject.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'EventObject': { type: '', declaredBy: 'org.incubatio.EventObject'},
        'on': { type: 'void', declaredBy: 'org.incubatio.EventObject', parameters: function () { return [  { index: 1, type: 'String', optional: false },{ index: 2, type: 'Function', optional: false } ]; }},
        'off': { type: 'void', declaredBy: 'org.incubatio.EventObject', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'trigger': { type: 'void', declaredBy: 'org.incubatio.EventObject', parameters: function () { return [  { index: 1, type: 'String', optional: false },{ index: 2, type: 'Object', optional: true } ]; }}
      };
    }
  };
};