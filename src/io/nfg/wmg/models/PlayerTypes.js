/**
 * Generated by Apache Royale Compiler from io/nfg/wmg/models/PlayerTypes.as
 * io.nfg.wmg.models.PlayerTypes
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('io.nfg.wmg.models.PlayerTypes');



/**
 * @constructor
 */
io.nfg.wmg.models.PlayerTypes = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('io.nfg.wmg.models.PlayerTypes', io.nfg.wmg.models.PlayerTypes);


/**
 * @export
 * @const
 * @type {number}
 */
io.nfg.wmg.models.PlayerTypes.AI = 0;


/**
 * @export
 * @const
 * @type {number}
 */
io.nfg.wmg.models.PlayerTypes.LOCAL = 1;


/**
 * @export
 * @const
 * @type {number}
 */
io.nfg.wmg.models.PlayerTypes.NET = 2;


/**
 * @export
 * @const
 * @type {Array}
 */
io.nfg.wmg.models.PlayerTypes.NAMES = ["ai", "local", "net"];


/**
 * @export
 * @param {string} name
 * @return {number}
 */
io.nfg.wmg.models.PlayerTypes.getIdByName = function(name) {
  return io.nfg.wmg.models.PlayerTypes.NAMES.indexOf(name);
};


/**
 * @export
 * @param {number} id
 * @return {string}
 */
io.nfg.wmg.models.PlayerTypes.getNameById = function(id) {
  return io.nfg.wmg.models.PlayerTypes.NAMES[id];
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
io.nfg.wmg.models.PlayerTypes.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PlayerTypes', qName: 'io.nfg.wmg.models.PlayerTypes', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
io.nfg.wmg.models.PlayerTypes.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        '|getIdByName': { type: 'Number', declaredBy: 'io.nfg.wmg.models.PlayerTypes', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        '|getNameById': { type: 'String', declaredBy: 'io.nfg.wmg.models.PlayerTypes', parameters: function () { return [  { index: 1, type: 'Number', optional: false } ]; }}
      };
    }
  };
};