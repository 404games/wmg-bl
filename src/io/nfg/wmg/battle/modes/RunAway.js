/**
 * Generated by Apache Royale Compiler from io/nfg/wmg/battle/modes/RunAway.as
 * io.nfg.wmg.battle.modes.RunAway
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('io.nfg.wmg.battle.modes.RunAway');

goog.require('io.nfg.wmg.battle.BattleLogic');
goog.require('io.nfg.wmg.battle.components.UnitData');
goog.require('io.nfg.wmg.battle.modes.AGameMode');
goog.require('org.incubatio.Entity');
goog.require('io.nfg.wmg.battle.modes.IGameMode');



/**
 * @constructor
 * @extends {io.nfg.wmg.battle.modes.AGameMode}
 * @implements {io.nfg.wmg.battle.modes.IGameMode}
 * @param {Object} mode
 * @param {io.nfg.wmg.battle.BattleLogic} battle
 */
io.nfg.wmg.battle.modes.RunAway = function(mode, battle) {
  io.nfg.wmg.battle.modes.RunAway.base(this, 'constructor', mode, battle);
  if (!mode.hasOwnProperty('point'))
    throw new Error("RunAwayGameModeError > point has to be defined!");
  this._point = mode.point;
  if (!mode.hasOwnProperty('pIndex'))
    throw new Error("DefendGameModeError > pindex has to be defined!");
  this._pIndex = Number(mode.pIndex);
};
goog.inherits(io.nfg.wmg.battle.modes.RunAway, io.nfg.wmg.battle.modes.AGameMode);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('io.nfg.wmg.battle.modes.RunAway', io.nfg.wmg.battle.modes.RunAway);


/**
 * @private
 * @type {Array}
 */
io.nfg.wmg.battle.modes.RunAway.prototype._point;


/**
 * @private
 * @type {number}
 */
io.nfg.wmg.battle.modes.RunAway.prototype._pIndex;


/**
 * @export
 * @override
 */
io.nfg.wmg.battle.modes.RunAway.prototype.didGameEnded = function(pIndex) {
  var /** @type {number} */ destinationGID = this.battle.tileMap.tilePos2Gid(this._point[0], this._point[1]);
  var /** @type {org.incubatio.Entity} */ entity = this.battle.unitMap[destinationGID];
  return this.isPlayerAlive(this._pIndex) == false || (pIndex == this._pIndex && entity != null && entity.getComponent(io.nfg.wmg.battle.components.UnitData).get('pIndex') == pIndex);
};


/**
 * @export
 * @override
 */
io.nfg.wmg.battle.modes.RunAway.prototype.didPlayerWin = function(pIndex) {
  var /** @type {number} */ destinationGID = this.battle.tileMap.tilePos2Gid(this._point[0], this._point[1]);
  var /** @type {org.incubatio.Entity} */ entity = this.battle.unitMap[destinationGID];
  return (pIndex == this._pIndex && entity != null && entity.getComponent(io.nfg.wmg.battle.components.UnitData).get('pIndex') == pIndex) || (pIndex != this._pIndex && (entity == null || entity.getComponent(io.nfg.wmg.battle.components.UnitData).get('pIndex') != this._pIndex));
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
io.nfg.wmg.battle.modes.RunAway.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'RunAway', qName: 'io.nfg.wmg.battle.modes.RunAway', kind: 'class' }], interfaces: [io.nfg.wmg.battle.modes.IGameMode] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
io.nfg.wmg.battle.modes.RunAway.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'RunAway': { type: '', declaredBy: 'io.nfg.wmg.battle.modes.RunAway', parameters: function () { return [  { index: 1, type: 'Object', optional: false },{ index: 2, type: 'io.nfg.wmg.battle.BattleLogic', optional: false } ]; }},
        'didGameEnded': { type: 'Boolean', declaredBy: 'io.nfg.wmg.battle.modes.RunAway', parameters: function () { return [  { index: 1, type: 'Number', optional: false } ]; }},
        'didPlayerWin': { type: 'Boolean', declaredBy: 'io.nfg.wmg.battle.modes.RunAway', parameters: function () { return [  { index: 1, type: 'Number', optional: false } ]; }}
      };
    }
  };
};