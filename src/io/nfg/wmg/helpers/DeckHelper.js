/**
 * Generated by Apache Royale Compiler from io/nfg/wmg/helpers/DeckHelper.as
 * io.nfg.wmg.helpers.DeckHelper
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('io.nfg.wmg.helpers.DeckHelper');

goog.require('io.nfg.wmg.models.DeckUnit');
goog.require('io.nfg.wmg.utils.Resources');
goog.require('org.apache.royale.utils.Language');



/**
 * @constructor
 */
io.nfg.wmg.helpers.DeckHelper = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('io.nfg.wmg.helpers.DeckHelper', io.nfg.wmg.helpers.DeckHelper);


/**
 * @export
 * @param {number} armyIndex
 * @param {number} typeIndex
 * @return {string}
 */
io.nfg.wmg.helpers.DeckHelper.getUnitTypeFromIndexes = function(armyIndex, typeIndex) {
  return io.nfg.wmg.helpers.DeckHelper["menusConfig"][io.nfg.wmg.helpers.DeckHelper["menusConfig"].armies[armyIndex]][typeIndex];
};


/**
 * @export
 * @param {string} type
 * @return {number}
 */
io.nfg.wmg.helpers.DeckHelper.getSpecieIndexFromType = function(type) {
  return io.nfg.wmg.helpers.DeckHelper["menusConfig"].armies.indexOf(io.nfg.wmg.helpers.DeckHelper["menusConfig"].unit_to_army[type]);
};


/**
 * @export
 * @param {string} type
 * @return {number}
 */
io.nfg.wmg.helpers.DeckHelper.getUnitIndexFromType = function(type) {
  return io.nfg.wmg.helpers.DeckHelper["menusConfig"][io.nfg.wmg.helpers.DeckHelper["menusConfig"].unit_to_army[type]].indexOf(type);
};


/**
 * @export
 * @param {number} armyIndex
 * @return {number}
 */
io.nfg.wmg.helpers.DeckHelper.getArmySize = function(armyIndex) {
  return io.nfg.wmg.helpers.DeckHelper["menusConfig"][io.nfg.wmg.helpers.DeckHelper["menusConfig"].armies[armyIndex]].length - 1;
};


/**
 * @export
 * @param {*} value
 * @return {Array}
 */
io.nfg.wmg.helpers.DeckHelper.initUnits = function(value) {
  if (org.apache.royale.utils.Language.is(value, Array))
    return value;
  if (org.apache.royale.utils.Language.is(value, String))
    return io.nfg.wmg.helpers.DeckHelper.unitsFromString(value);
  else
    return io.nfg.wmg.helpers.DeckHelper.unitsFromObject(value);
};


/**
 * @export
 * @param {string} dataString
 * @return {Array}
 */
io.nfg.wmg.helpers.DeckHelper.unitsFromString = function(dataString) {
  var /** @type {Array} */ units = [];
  var /** @type {number} */ i;
  var /** @type {Array} */ data = dataString.split(';');
  for (i in data) {
    units[units.length] = io.nfg.wmg.models.DeckUnit.fromString(data[i]);
    units[units.length - 1].set('id', i);
  }
  return units;
};


/**
 * @export
 * @param {Object} data
 * @return {Array}
 */
io.nfg.wmg.helpers.DeckHelper.unitsFromObject = function(data) {
  var /** @type {Array} */ units = [];
  var /** @type {number} */ i;
  for (i in data) {
    units[units.length] = new io.nfg.wmg.models.DeckUnit(data[i]);
    units[units.length - 1].set('id', i);
  }
  return units;
};


io.nfg.wmg.helpers.DeckHelper.get__menusConfig = function() {
  return io.nfg.wmg.utils.Resources.configs.graphics.menus;
};


Object.defineProperties(io.nfg.wmg.helpers.DeckHelper, /** @lends {io.nfg.wmg.helpers.DeckHelper} */ {
/**
  * @export
  * @type {Object} */
menusConfig: {
get: io.nfg.wmg.helpers.DeckHelper.get__menusConfig}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
io.nfg.wmg.helpers.DeckHelper.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DeckHelper', qName: 'io.nfg.wmg.helpers.DeckHelper', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
io.nfg.wmg.helpers.DeckHelper.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        '|menusConfig': { type: 'Object', access: 'readonly', declaredBy: 'io.nfg.wmg.helpers.DeckHelper'}
      };
    },
    methods: function () {
      return {
        '|getUnitTypeFromIndexes': { type: 'String', declaredBy: 'io.nfg.wmg.helpers.DeckHelper', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        '|getSpecieIndexFromType': { type: 'Number', declaredBy: 'io.nfg.wmg.helpers.DeckHelper', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        '|getUnitIndexFromType': { type: 'Number', declaredBy: 'io.nfg.wmg.helpers.DeckHelper', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        '|getArmySize': { type: 'Number', declaredBy: 'io.nfg.wmg.helpers.DeckHelper', parameters: function () { return [  { index: 1, type: 'Number', optional: false } ]; }},
        '|initUnits': { type: 'Vector.<io.nfg.wmg.models.DeckUnit>', declaredBy: 'io.nfg.wmg.helpers.DeckHelper', parameters: function () { return [  { index: 1, type: '*', optional: false } ]; }},
        '|unitsFromString': { type: 'Vector.<io.nfg.wmg.models.DeckUnit>', declaredBy: 'io.nfg.wmg.helpers.DeckHelper', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        '|unitsFromObject': { type: 'Vector.<io.nfg.wmg.models.DeckUnit>', declaredBy: 'io.nfg.wmg.helpers.DeckHelper', parameters: function () { return [  { index: 1, type: 'Object', optional: false } ]; }}
      };
    }
  };
};