/**
 * Generated by Apache Royale Compiler from io/nfg/core/pathfinding/PriorityQueue.as
 * io.nfg.core.pathfinding.PriorityQueue
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('io.nfg.core.pathfinding.PriorityQueue');

goog.require('io.nfg.core.pathfinding.Prioritizable');
goog.require('org.apache.royale.utils.Language');



/**
 * @constructor
 * @param {Array=} data
 * @param {Function=} compare
 */
io.nfg.core.pathfinding.PriorityQueue = function(data, compare) {
  data = typeof data !== 'undefined' ? data : null;
  compare = typeof compare !== 'undefined' ? compare : null;
  this._compare = compare ? compare : org.apache.royale.utils.Language.closure(this._defaultCompare, this, '_defaultCompare');
  this._data = data || [];
  this._length = 0;
  if (this._data.length > 0) {
    var /** @type {number} */ i;
    for (i in this._data)
      this._bubbleUp(i);
  }
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('io.nfg.core.pathfinding.PriorityQueue', io.nfg.core.pathfinding.PriorityQueue);


/**
 * @private
 * @type {Function}
 */
io.nfg.core.pathfinding.PriorityQueue.prototype._compare;


/**
 * @private
 * @type {Array}
 */
io.nfg.core.pathfinding.PriorityQueue.prototype._data;


/**
 * @private
 * @type {number}
 */
io.nfg.core.pathfinding.PriorityQueue.prototype._length;


/**
 * @export
 * @return {number}
 */
io.nfg.core.pathfinding.PriorityQueue.prototype.size = function() {
  return this._length;
};


/**
 * @export
 * @param {io.nfg.core.pathfinding.Prioritizable} item
 */
io.nfg.core.pathfinding.PriorityQueue.prototype.enqueue = function(item) {
  this._data[this._length++] = item;
  this._bubbleUp(this._data.length - 1);
};


/**
 * @export
 * @return {io.nfg.core.pathfinding.Prioritizable}
 */
io.nfg.core.pathfinding.PriorityQueue.prototype.dequeue = function() {
  var /** @type {io.nfg.core.pathfinding.Prioritizable} */ ret = this._data[0];
  var /** @type {io.nfg.core.pathfinding.Prioritizable} */ last = this._data.pop();
  this._length--;
  if (this._data.length > 0) {
    this._data[0] = last;
    this._bubbleDown(0);
  }
  return ret;
};


/**
 * @export
 * @return {io.nfg.core.pathfinding.Prioritizable}
 */
io.nfg.core.pathfinding.PriorityQueue.prototype.peek = function() {
  return this._data[0];
};


/**
 * @export
 */
io.nfg.core.pathfinding.PriorityQueue.prototype.clear = function() {
  this._data.length = this._length = 0;
};


/**
 * @export
 * @param {number} pos
 */
io.nfg.core.pathfinding.PriorityQueue.prototype._bubbleUp = function(pos) {
  var /** @type {number} */ parent;
  var /** @type {io.nfg.core.pathfinding.Prioritizable} */ x;
  while (pos > 0) {
    parent = (pos - 1) >>> 1;
    if (this._compare(this._data[pos].priority, this._data[parent].priority) < 0) {
      x = this._data[parent];
      this._data[parent] = this._data[pos];
      this._data[pos] = x;
      pos = parent;
    }
    else
      break;
  }
};


/**
 * @private
 * @param {number} pos
 */
io.nfg.core.pathfinding.PriorityQueue.prototype._bubbleDown = function(pos) {
  var /** @type {number} */ last = this._data.length - 1;
  var /** @type {number} */ left;
  var /** @type {number} */ right;
  var /** @type {number} */ minIndex;
  var /** @type {io.nfg.core.pathfinding.Prioritizable} */ x;
  while (true) {
    left = (pos << 1) + 1;
    right = left + 1;
    minIndex = pos;
    if (left <= last && this._compare(this._data[left].priority, this._data[minIndex].priority) < 0)
      minIndex = left;
    if (right <= last && this._compare(this._data[right].priority, this._data[minIndex].priority) < 0)
      minIndex = right;
    if (minIndex != pos) {
      x = this._data[minIndex];
      this._data[minIndex] = this._data[pos];
      this._data[pos] = x;
      pos = minIndex;
    }
    else
      break;
  }
};


/**
 * @private
 * @param {number} a
 * @param {number} b
 * @return {number}
 */
io.nfg.core.pathfinding.PriorityQueue.prototype._defaultCompare = function(a, b) {
  return a - b;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
io.nfg.core.pathfinding.PriorityQueue.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PriorityQueue', qName: 'io.nfg.core.pathfinding.PriorityQueue', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
io.nfg.core.pathfinding.PriorityQueue.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'size': { type: 'Number', declaredBy: 'io.nfg.core.pathfinding.PriorityQueue'},
        'PriorityQueue': { type: '', declaredBy: 'io.nfg.core.pathfinding.PriorityQueue', parameters: function () { return [  { index: 1, type: 'Array', optional: true },{ index: 2, type: 'Function', optional: true } ]; }},
        'enqueue': { type: 'void', declaredBy: 'io.nfg.core.pathfinding.PriorityQueue', parameters: function () { return [  { index: 1, type: 'io.nfg.core.pathfinding.Prioritizable', optional: false } ]; }},
        'dequeue': { type: 'io.nfg.core.pathfinding.Prioritizable', declaredBy: 'io.nfg.core.pathfinding.PriorityQueue'},
        'peek': { type: 'io.nfg.core.pathfinding.Prioritizable', declaredBy: 'io.nfg.core.pathfinding.PriorityQueue'},
        'clear': { type: 'void', declaredBy: 'io.nfg.core.pathfinding.PriorityQueue'},
        '_bubbleUp': { type: 'void', declaredBy: 'io.nfg.core.pathfinding.PriorityQueue', parameters: function () { return [  { index: 1, type: 'Number', optional: false } ]; }}
      };
    }
  };
};