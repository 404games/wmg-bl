/**
 * Generated by Apache Royale Compiler from io/nfg/core/db/AModel.as
 * io.nfg.core.db.AModel
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('io.nfg.core.db.AModel');
/* Royale Static Dependency List: io.nfg.core.Tools,io.nfg.core.db.AModel*/

goog.require('io.nfg.core.Tools');
goog.require('io.nfg.core.events.EventDispatcher');
goog.require('org.apache.royale.utils.Language');



/**
 * @constructor
 * @extends {io.nfg.core.events.EventDispatcher}
 * @param {Object} data
 * @param {Object} schema
 * @param {Function=} defaults
 */
io.nfg.core.db.AModel = function(data, schema, defaults) {
  io.nfg.core.db.AModel.base(this, 'constructor');
  defaults = typeof defaults !== 'undefined' ? defaults : null;
  this._defaults = defaults;
  this._schema = schema;
  this.empty();
  this._jsonExclude = [];
  this.merge(data);
  this.updated();
};
goog.inherits(io.nfg.core.db.AModel, io.nfg.core.events.EventDispatcher);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('io.nfg.core.db.AModel', io.nfg.core.db.AModel);


/**
 * @export
 * @const
 * @type {Array}
 */
io.nfg.core.db.AModel.CASTING_TYPES = [Number, String];


/**
 * @protected
 * @type {Object}
 */
io.nfg.core.db.AModel.prototype._attrs;


/**
 * @protected
 * @type {Object}
 */
io.nfg.core.db.AModel.prototype._edits;


/**
 * @protected
 * @type {Function}
 */
io.nfg.core.db.AModel.prototype._defaults;


/**
 * @protected
 * @type {Object}
 */
io.nfg.core.db.AModel.prototype._schema;


/**
 * @protected
 * @type {Array}
 */
io.nfg.core.db.AModel.prototype._jsonExclude;


/**
 * @protected
 * @type {Function}
 */
io.nfg.core.db.AModel._log;


/**
 * @export
 * @param {*} key
 * @return {*}
 */
io.nfg.core.db.AModel.prototype.get = function(key) {
  if (this._schema.hasOwnProperty(key) == false)
    throw key + ' is not defined in the schema';
  return this._edits.hasOwnProperty(key) ? this._edits[key] : this._attrs[key];
};


/**
 * @export
 * @param {*} key
 * @param {*} value
 * @return {io.nfg.core.db.AModel}
 */
io.nfg.core.db.AModel.prototype.set = function(key, value) {
  if (this._schema.hasOwnProperty(key) == false) {
    io.nfg.core.db.AModel._log(key, 'is not defined in the schema');
  } else {
    if (value && org.apache.royale.utils.Language.is(value, this._schema[key]) == false) {
      try {
        if (io.nfg.core.db.AModel.CASTING_TYPES.indexOf(this._schema[key]) > -1) {
          io.nfg.core.db.AModel._log('casting', key, 'from', typeof(value), 'to', this._schema[key]().constructor.name);
          value = this._schema[key](value);
        } else
          io.nfg.core.db.AModel._log("Invalid value \"" + value + "\" for attribute \"" + key + "\" -> got " + typeof(value) + ", expected (" + key + ') ' + (new this._schema[key]()).constructor.name);
      } catch (e) {
        io.nfg.core.db.AModel._log('Casting failed for', key, value);
      }
    }
    this._edits[key] = value;
  }
  return this;
};


/**
 * @export
 * @param {*} key
 */
io.nfg.core.db.AModel.prototype.unset = function(key) {
  this._edits[key] = undefined;
};


/**
 * @export
 * @param {Object} data
 */
io.nfg.core.db.AModel.prototype.merge = function(data) {
  var /** @type {string} */ key;
  for (key in data) {
    this.set(key, data[key]);
  }
};


/**
 * @private
 * @param {*} value
 * @return {*}
 */
io.nfg.core.db.AModel.prototype._recursive = function(value) {
  var /** @type {number} */ i;
  var /** @type {*} */ ret;
  if (org.apache.royale.utils.Language.is(value, Array) || org.apache.royale.utils.Language.is(value, Array)) {
    ret = [];
    for (i in value)
      ret[i] = this._recursive(value[i]);
  }
  else if (org.apache.royale.utils.Language.is(value, io.nfg.core.db.AModel))
    ret = value.toJSON2();
  else
    ret = value;
  return ret;
};


/**
 * @export
 * @param {string=} key
 * @return {Object}
 */
io.nfg.core.db.AModel.prototype.toJSON2 = function(key) {
  key = typeof key !== 'undefined' ? key : null;
  var /** @type {Object} */ model = {};
  var /** @type {*} */ value;
  for (key in this._schema) {
    value = this.get(key);
    if (value != undefined && this._jsonExclude.indexOf(key) == -1) {
      model[key] = this._recursive(value);
    }
  }
  return model;
};


/**
 * @export
 * @return {*}
 */
io.nfg.core.db.AModel.prototype.stringify = function() {
  return JSON.stringify(this.toJSON2());
};


/**
 * @export
 */
io.nfg.core.db.AModel.prototype.updated = function() {
  var /** @type {*} */ key;
  for (key in this._schema)
    this._attrs[key] = this.get(key);
  this._edits = {};
};


/**
 * @export
 * @return {Object}
 */
io.nfg.core.db.AModel.prototype.getEdits = function() {
  return JSON.parse(JSON.stringify(this._edits));
};


/**
 * @export
 * @return {Object}
 */
io.nfg.core.db.AModel.prototype.getAttrs = function() {
  return JSON.parse(JSON.stringify(this._attrs));
};


/**
 * @export
 * @param {string} key
 * @return {boolean}
 */
io.nfg.core.db.AModel.prototype.has = function(key) {
  return this.get(key) != undefined;
};


/**
 * @export
 * @return {boolean}
 */
io.nfg.core.db.AModel.prototype.isNew = function() {
  return this.has('id');
};


/**
 * @export
 * @return {boolean}
 */
io.nfg.core.db.AModel.prototype.isModified = function() {
  var /** @type {*} */ key;
  for (key in this._edits)
    return true;
  return false;
};


/**
 * @export
 * @return {boolean}
 */
io.nfg.core.db.AModel.prototype.isSynced = function() {
  return !this.isNew() || this.isModified();
};


/**
 * @export
 */
io.nfg.core.db.AModel.prototype.empty = function() {
  this._attrs = this._defaults ? this._defaults() : {};
  this._edits = {};
};

io.nfg.core.db.AModel._log = io.nfg.core.Tools.createLogger(io.nfg.core.db.AModel, "models");




/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
io.nfg.core.db.AModel.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'AModel', qName: 'io.nfg.core.db.AModel', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
io.nfg.core.db.AModel.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'AModel': { type: '', declaredBy: 'io.nfg.core.db.AModel', parameters: function () { return [  { index: 1, type: 'Object', optional: false },{ index: 2, type: 'Object', optional: false },{ index: 3, type: 'Function', optional: true } ]; }},
        'get': { type: '*', declaredBy: 'io.nfg.core.db.AModel', parameters: function () { return [  { index: 1, type: '*', optional: false } ]; }},
        'set': { type: 'io.nfg.core.db.AModel', declaredBy: 'io.nfg.core.db.AModel', parameters: function () { return [  { index: 1, type: '*', optional: false },{ index: 2, type: '*', optional: false } ]; }},
        'unset': { type: 'void', declaredBy: 'io.nfg.core.db.AModel', parameters: function () { return [  { index: 1, type: '*', optional: false } ]; }},
        'merge': { type: 'void', declaredBy: 'io.nfg.core.db.AModel', parameters: function () { return [  { index: 1, type: 'Object', optional: false } ]; }},
        'toJSON2': { type: 'Object', declaredBy: 'io.nfg.core.db.AModel', parameters: function () { return [  { index: 1, type: 'String', optional: true } ]; }},
        'stringify': { type: '*', declaredBy: 'io.nfg.core.db.AModel'},
        'updated': { type: 'void', declaredBy: 'io.nfg.core.db.AModel'},
        'getEdits': { type: 'Object', declaredBy: 'io.nfg.core.db.AModel'},
        'getAttrs': { type: 'Object', declaredBy: 'io.nfg.core.db.AModel'},
        'has': { type: 'Boolean', declaredBy: 'io.nfg.core.db.AModel', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'isNew': { type: 'Boolean', declaredBy: 'io.nfg.core.db.AModel'},
        'isModified': { type: 'Boolean', declaredBy: 'io.nfg.core.db.AModel'},
        'isSynced': { type: 'Boolean', declaredBy: 'io.nfg.core.db.AModel'},
        'empty': { type: 'void', declaredBy: 'io.nfg.core.db.AModel'}
      };
    }
  };
};
